(window.webpackJsonp=window.webpackJsonp||[]).push([[227],{354:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return p})),t.d(n,"default",(function(){return u}));var a=t(1),o=t(9),i=(t(0),t(480)),r={id:"navigating-without-navigation-prop",title:"Navigating without the navigation prop",sidebar_label:"Navigating without the navigation prop"},c={id:"version-5.x/navigating-without-navigation-prop",title:"Navigating without the navigation prop",description:"Sometimes you need to trigger a navigation action from places where you do not have access to the `navigation` prop, such as a Redux middleware. For such cases, you can dispatch navigation actions from the navigation container.",source:"@site/versioned_docs/version-5.x/navigating-without-navigation-prop.md",permalink:"/docs/navigating-without-navigation-prop",editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/source/versioned_docs/version-5.x/navigating-without-navigation-prop.md",version:"5.x",sidebar_label:"Navigating without the navigation prop",sidebar:"version-5.x/docs",previous:{title:"Access the navigation prop from any component",permalink:"/docs/connecting-navigation-prop"},next:{title:"Deep linking",permalink:"/docs/deep-linking"}},p=[{value:"Handling initialization",id:"handling-initialization",children:[]}],s={rightToc:p};function u(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Sometimes you need to trigger a navigation action from places where you do not have access to the ",Object(i.b)("inlineCode",{parentName:"p"},"navigation")," prop, such as a Redux middleware. For such cases, you can dispatch navigation actions from the navigation container."),Object(i.b)("p",null,"If you're looking for a way to navigate from inside a component without needing to pass the ",Object(i.b)("inlineCode",{parentName:"p"},"navigation")," prop down, see ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/use-navigation"}),Object(i.b)("inlineCode",{parentName:"a"},"useNavigation")),"."),Object(i.b)("p",null,"You can get access to the root navigation object through a ",Object(i.b)("inlineCode",{parentName:"p"},"ref")," and pass it to the ",Object(i.b)("inlineCode",{parentName:"p"},"RootNavigation")," which we will later use to navigate."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// App.js\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { navigationRef } from './RootNavigation';\n\nexport default function App() {\n  return (\n    <NavigationContainer ref={navigationRef}>{/* ... */}</NavigationContainer>\n  );\n}\n")),Object(i.b)("p",null,"In the next step, we define ",Object(i.b)("inlineCode",{parentName:"p"},"RootNavigation"),", which is a simple module with functions that dispatch user-defined navigation actions."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// RootNavigation.js\n\nimport * as React from 'react';\n\nexport const navigationRef = React.createRef();\n\nexport function navigate(name, params) {\n  navigationRef.current?.navigate(name, params);\n}\n\n// add other navigation functions that you need and export them\n")),Object(i.b)("p",null,"Then, in any of your javascript modules, just import the ",Object(i.b)("inlineCode",{parentName:"p"},"RootNavigation")," and call functions which you exported from it. You may use this approach outside of your React components and, in fact, it works just as well when used from within them."),Object(i.b)("samp",{id:"no-nav-prop"}),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// any js module\nimport * as RootNavigation from './path/to/RootNavigation.js';\n\n// ...\n\nRootNavigation.navigate('ChatScreen', { userName: 'Lucy' });\n")),Object(i.b)("p",null,"Apart from ",Object(i.b)("inlineCode",{parentName:"p"},"navigate"),", you can add other navigation actions:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { StackActions } from '@react-navigation/native';\n\nexport function push(...args) {\n  navigationRef.current?.dispatch(StackActions.push(...args));\n}\n")),Object(i.b)("p",null,"Note that a stack navigators needs to be rendered to handle this action. You may want to check the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator"}),"docs for nesting")," for more details."),Object(i.b)("p",null,"When writing tests, you may mock the navigation functions, and make assertions on whether the correct functions are called with the correct parameters."),Object(i.b)("h2",{id:"handling-initialization"},"Handling initialization"),Object(i.b)("p",null,"When using this pattern, you need to keep few things in mind to avoid crashes in your app."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The ref is set only after the navigation container renders"),Object(i.b)("li",{parentName:"ul"},"A navigator needs to be rendered to be able to handle actions")),Object(i.b)("p",null,"If you try to navigate without rendering a navigator or before the navigator finishes mounting, it will throw and crash your app if not handled. So you'll need to add an additional check to decide what to do until your app mounts."),Object(i.b)("p",null,"For an example, consider the following scenario, you have a screen somewhere in the app, and that screen dispatches a redux action on ",Object(i.b)("inlineCode",{parentName:"p"},"useEffect"),"/",Object(i.b)("inlineCode",{parentName:"p"},"componentDidMount"),". You are listening for this action in your middleware and try to perform navigation when you get it. This will throw an error, because by this time, the parent navigator hasn't finished mounting. Parent's ",Object(i.b)("inlineCode",{parentName:"p"},"useEffect"),"/",Object(i.b)("inlineCode",{parentName:"p"},"componentDidMount")," is always called ",Object(i.b)("strong",{parentName:"p"},"after")," child's ",Object(i.b)("inlineCode",{parentName:"p"},"useEffect"),"/",Object(i.b)("inlineCode",{parentName:"p"},"componentDidMount"),"."),Object(i.b)("p",null,"To avoid this, you can set a ref to tell you that your app has finished mounting, and check that ref before performing any navigation. To do this, we can use ",Object(i.b)("inlineCode",{parentName:"p"},"useEffect")," in our root component:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// App.js\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { navigationRef, isMountedRef } from './RootNavigation';\n\nexport default function App() {\n  React.useEffect(() => {\n    isMountedRef.current = true;\n\n    return () => (isMountedRef.current = false);\n  }, []);\n\n  return (\n    <NavigationContainer ref={navigationRef}>{/* ... */}</NavigationContainer>\n  );\n}\n")),Object(i.b)("p",null,"Also export this ref from our ",Object(i.b)("inlineCode",{parentName:"p"},"RootNavigation"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// RootNavigation.js\n\nimport * as React from 'react';\n\nexport const isMountedRef = React.createRef();\n\nexport const navigationRef = React.createRef();\n\nexport function navigate(name, params) {\n  if (isMountedRef.current && navigationRef.current) {\n    // Perform navigation if the app has mounted\n    navigationRef.current.navigate(name, params);\n  } else {\n    // You can decide what to do if the app hasn't mounted\n    // You can ignore this, or add these actions to a queue you can call later\n  }\n}\n")))}u.isMDXComponent=!0},480:function(e,n,t){"use strict";t.d(n,"a",(function(){return l})),t.d(n,"b",(function(){return b}));var a=t(0),o=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=o.a.createContext({}),u=function(e){var n=o.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},l=function(e){var n=u(e.components);return o.a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},g=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,r=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),l=u(t),g=a,b=l["".concat(r,".").concat(g)]||l[g]||d[g]||i;return t?o.a.createElement(b,c({ref:n},s,{components:t})):o.a.createElement(b,c({ref:n},s))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=g;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,r[1]=c;for(var s=2;s<i;s++)r[s]=t[s];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,t)}g.displayName="MDXCreateElement"}}]);